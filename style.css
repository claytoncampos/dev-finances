/*Global ================== */
:root {
  --color-primary: #8257e5;
  --color-primary-border: #6833e4;
  --color-primary-hover: #9466ff;
  --color-secondary: #e1e1e6;
  --color-text: #a8a8b3;
  --dark-blue: #363f5f;
  --green: #49aa26;
  --light-green: #3dd705;
  --red: #e92929;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
  font-size: 93.75%; /*15px*/
}

body {
  background: #f0f2f5;
  font-family: 'Poppins', sans-serif;
}

/*css trick sumir elemento sem afetar os letores de tela */
.sr-only {
  position: absolute;
  height: 1px;
  width: 1px;
  padding: 1px;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.container {
  width: min(90vw, 800px);
  margin: auto;
}

/* Titles ==================*/

h2 {
  margin-top: 3.2rem;
  margin-bottom: 0.8rem;
  color: var(--dark-blue);
  font-weight: normal;
}
/* Links e Buttons ==================*/

a {
  color: var(--green);
  text-decoration: none;
}

a:hover {
  color: var(--light-green);
}

button {
  width: 100%;
  height: 50px;

  border: none;

  color: white;
  background: var(--green);

  padding: 0;

  border-radius: 0.25rem;

  cursor: pointer;
}

button:hover {
  background: var(--light-green);
}

.button.new {
  margin-bottom: 0.8rem;
  display: inline-block;
}

.button.cancel {
  color: var(--red);
  border: 2px var(--red) solid;
  border-radius: 0.25rem;

  height: 50px;

  display: flex;
  justify-content: center;
  align-items: center;

  opacity: 0.3;
}

.button.cancel:hover {
  opacity: 0.6;
}

button.darkMode {
  background: none;

  background-image: url(./assets/alternancia2.png);
  width: 32px;
  height: 28px;
}

button.darkMode:hover {
  background-color: #12a454;
  background-image: url(./assets/alternancia.png);
}
/* Header ==================*/
header {
  background: #2d4a22;
  padding: 2rem 0 10rem;
  text-align: center;
}

#logo {
  color: #fff;
  font-weight: 100;
}

/* Balance ================== */

#balance {
  margin-top: -8rem;
}

#balance h2 {
  color: #fff;
  margin-top: 0;
}

/*Cards ================== */

.card {
  background: white;
  padding: 1.5rem 2rem;
  border-radius: 0.25rem;
  margin-bottom: 2rem;
  color: var(--dark-blue);
}

.card h3 {
  font-weight: normal;
  font-size: 1rem;

  display: flex;
  align-items: center;
  justify-content: space-between;
}

.card p {
  font-size: 2rem;
  line-height: 3rem;
  margin-top: 1rem;
}

.card.total {
  background: var(--green);
  color: #fff;
}
.card.total.negative {
  background: #e8473f;
}
/*Table ================== */
#transaction {
  display: block;
  width: 100%;

  overflow-x: auto; /* habilitar scroll lateral*/
}
#data-table {
  width: 100%;
  border-spacing: 0 0.5rem;
  color: #969cb3;
}

table thead tr th:first-child,
table tbody tr td:first-child {
  border-radius: 0.25rem 0 0 0.25rem;
}

table thead tr th:last-child,
table tbody tr td:last-child {
  border-radius: 0 0.25rem 0.25rem 0;
}

table thead th {
  background: white;
  font-weight: normal;
  padding: 1rem 2rem;
  text-align: left;
  color: #969cb3;
}

table tbody tr {
  opacity: 0.7;
}
table tbody tr:hover {
  opacity: 1;
}

table tbody td {
  background: #fff;
  padding: 1rem 2rem;
}

td.description {
  color: var(--dark-blue);
}

td.income {
  color: #12a454;
}

td.expense {
  color: #e92929;
}

td img {
  cursor: pointer;
}
/* Modal ================== */
.modal-overlay {
  width: 100%;
  height: 100%;

  background-color: rgba(0, 0, 0, 0.7);
  position: fixed;
  top: 0;

  display: flex;
  align-items: center;
  justify-content: center;

  opacity: 0;
  visibility: hidden;
}

.modal-overlay.active {
  opacity: 1;
  visibility: visible;
}

.modal {
  background: #f0f2f5;
  padding: 2.4rem;
}

/* Form =================== */

#form {
  max-width: 500px;
}

#form h2 {
  margin-top: 0;
}

input {
  border: none;
  border-radius: 0.2rem;

  padding: 0.8rem;

  width: 100%;
}

.input-group {
  margin-top: 0.8rem;
}

input#amount {
  margin-bottom: 5px;
}
.input-group small {
  opacity: 0.4;
}
input:focus {
  border: solid 1px #749985;
}

.input-group.actions {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.input-group.actions .button,
.input-group.actions button {
  width: 48%;
}
/*Footer ================== */
footer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  bottom: 0;
  position: relative;
}

footer p {
  display: flex;

  text-align: center;
  padding: 4rem 0 2rem;
  color: var(--dark-blue);

  opacity: 0.6;
  text-align: center;
}
footer img {
  opacity: 0.8;
}
/* Responsive ================== */

@media (min-width: 800px) {
  html {
    font-size: 87.5%;
  }

  #balance {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    column-gap: 2rem;
  }

  footer {
    margin-top: 250px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

/* darkmode*/
.night-mode {
  background: #444;
}

.switch__container {
  display: flex;
  justify-content: center;
}

/*esconder o checkbox feio e jogá-lo para fora da tela, 
garantindo assim, que ele não seja clicável.*/

.switch {
  position: absolute;
  margin-left: -9999px;
  visibility: hidden;
}

/* Usamos aqui o seletor +, conhecido como adjacente, 
que pega o primeiro elemento após o primeiro seletor+*/

/*responsáveis por deixar o elemento ali "clicável"
 usando a propriedade cursor: pointer, também remove a opção 
 de selecionar a label com o user-select: none e deixa ele como um elemento de bloco, 
para que possamos botar tamanho e estilo.*/

.switch + label {
  display: block;
  position: relative;
  cursor: pointer;
  outline: none;
  user-select: none;
}

/*qui, nossa label será o elemento principal para criação 
do desenho. Primeiro, vamos definir um tamanho para ela,
 uma cor e também esse aspecto arredondado.
 
 Com esse primeiro passo, teremos nada mais que um retângulo 
 com as bordas completamente arredondadas, num fundo cinza.*/

.switch--shadow + label {
  padding: 2px;
  width: 60px;
  height: 30px;
  background-color: #dddddd;
  border-radius: 60px;
}

/*Depois, na própria label, iremos utilizar o seletor :before, 
ai ser responsável por fazer a transição entre o cinza e o 
fundo verde. E vamos usar o seletor :after para criar a bolinha,
 que irá de um lado para o outro.*/

/*as primeiras propriedades que são em conjunto para o 
:before e para o :after, servem para definir conteúdo para 
os mesmos, para que assim, possamos manipular.

Preste atenção, que eu coloco transition: all 0.4s para o 
before e o after, para que ocorra a transição suave, entre o estado de ON para o estado de OFF e vice-versa.

Com esses estilos, nós já temos o nosso botão prontinho, 
só falta criar a interação.*/

.switch--shadow + label:before,
.switch--shadow + label:after {
  display: block;
  position: absolute;
  top: 1px;
  left: 1px;
  bottom: 1px;
  content: '';
}
.switch--shadow + label:before {
  right: 1px;
  background-color: #f1f1f1;
  border-radius: 60px;
  transition: all 0.4s;
}
/*bolinha*/
.switch--shadow + label:after {
  width: 32px;
  background-color: #fff;
  border-radius: 100%;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  transition: all 0.4s;
}

/* Criando interação com clique no CSS

Esse é um truque bem legal e que serve para muitas coisas, 
existe um seletor no css, chamado :checked, que verifica se 
o input foi marcado ou não. Com isso em mãos, podemos fazer a seguinte regra:

Verificando se o input foi marcado e caso tenha sido,
 mudar a cor e também mover a bolinha para o lado.
*/

.switch--shadow:checked + label:before {
  background-color: #8ce196;
}
.switch--shadow:checked + label:after {
  transform: translateX(30px);
}
